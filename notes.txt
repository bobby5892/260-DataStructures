Binary Trees

struct Node{
	int value;
	Node* left;
	Node* right;
	bool deleted;
};

class BinaryTree{
	private:
		Node* root;
	public:
		BinaryTree(){
			this->root = nullptr;
		}
		void add(int value){
			Node* temp = new Node;
			temp->left = nullptr;
			temp->right = nullptr;
			temp->value = value;	
			temp->deleted = false;

			if(this->root == nullptr){
				this->root = temp;
			}
			else{
				Node * ptr = root;
				while(true){
					if(value < ptr->value){
						if(ptr->left == nullptr){
							ptr->left = temp;
							break;
						}
						
						else{
							ptr = ptr->left;
						}
					}
					else if( value > ptr->value){
						if(ptr->right == nullptr){
							ptr->right = temp;
							break;
						}
						else{
							ptr = ptr->right;
						}
					}
				
				}
			}
			return false; // should never happen
		}
		*Node delete(){
			recDelete(root);
		}
		recDelete(Node* ptr){
			recDelet(ptr->left);
			recDelete(ptr->right);
			delete ptr;	
		}
		bool isThere(int value){
			Node* ptr = root;
			while(ptr){
				if(ptr->value == value && !ptr->deleted){
					return true;
				}
				
				if(ptr->value > value){
					ptr = ptr->right;		
				}
				else{
					ptr = ptr->left;
				}			
			return false;
		}

		
}	
Adding Item

